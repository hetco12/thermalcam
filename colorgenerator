
<!DOCTYPE html>
<html>
<body>
  <script>

//this page is maed by james villenueve 
// code is free to distribute and is as is with no warranties
//some software may come alive and take over things. that is not or ever is the intent, but use at your own risk
//do not reproduce or use parts of code without proper credit to authors
// some of the functions are from the https://www.w3schools.com forum.
//this code basically creates a usable color array to be indexed by other programs. output should be cut and paste 
//for example in my case to arduino thermal camera
</script>
  Page created by james villeneve<br>
This page adjusts color by changing gradient fills between colors. information about false coloring can be obtained by 
searching wikipedia on thermcal cam and false color image.<br>
 with reference here https://www.w3schools.com/tags/canvas_getimagedata.asp [color map can store up to range of 1024 colors]<br>
 [you can set the 6 color ranges if you want or use defaults (just have input blank for default color), colors with more than one primary do better when color reduced to 16bit]
<br>
<form>
 1st<input type="input" id="color1" name="color1" vale="" >
 2nd<input type="input" id="color2" name="color2" vale="" >
 3rd<input type="input" id="color3" name="color3" vale="" >
 4th<input type="input" id="color4" name="color4" vale="" >
 5th<input type="input" id="color5" name="color5" vale="" >
 6th<input type="input" id="color6" name="color6" vale="" > -- colors are off of primary a little to increase colors<br>
<canvas id="myCanvas" width="1424" height="300" style="border:1px solid #d3d3d3;">

Your browser does not support the HTML5 canvas tag.</canvas>

<br>

data here is processed as 16bit of 4 hex values. and converted from to 888rgb to 565  for tests. this code assumes up to 1024. it can be cut and pasted into arudino
<br>


<textarea id='colorSets2' name='colorSets2' border='1' cols='160' rows="20"> results will post here tp put into new table</textarea>
<br>
   startsamplingat<input type="input" id="startsamplingat" name="startsamplingat" vale="200" />numeric 0 ~200, if to high we go past canvas<br>
  range <input type="input" id="range" name="range" vale="64" />numeric just greater than 1 and no more than 1024<br>
   repeat values <input type="input" id="repeat" name="repeat" vale="1" />this is normally 1<br>
 across values in table <input type="input" id="across" name="across" vale="1" />this is set to 6, but can be as wide as you want. it is for looks only<br>

<input type="submit"  >(may need to press submit a few times for autofill features. this is a current bug, sorry)
</form>
<script>
//values that can chane
var range=1024;// this value is used to generate color values
var startatcolorintable;//this is used to offset color start in case for example we only want blues and not black



function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

function heatMapColorforValue(value){
  var h = (1.0 - value) * 240
  return "hsl(" + h + ", 100%, 50%)";
}

function rgbToHex(r, g, b) {
    if (r > 255 || g > 255 || b > 255)
        throw "Invalid color component";
    return ((r << 16) | (g << 8) | b).toString(16);
}

function copy()
{
var imgData=ctx.getImageData(10,10,50,50);
ctx.putImageData(imgData,10,70);
}

function decimalToHex(d, padding) {
    var hex = Number(d).toString(16);
    padding = typeof (padding) === "undefined" || padding === null ? padding = 2 : padding;

    while (hex.length < padding) {
        hex = "0" + hex;
    }

    return hex;
}
//we want to store data from textbox area




//var oldColorRaw=getParameterByName('colorSets');
var c = document.getElementById("myCanvas");
var ctx = c.getContext("2d");
var hexinfo="000000"
var start
//we copy old color data into place
document.getElementById('color1').value=getParameterByName('color1');
document.getElementById('color2').value=getParameterByName('color2');
document.getElementById('color3').value=getParameterByName('color3');
document.getElementById('color4').value=getParameterByName('color4');
document.getElementById('color5').value=getParameterByName('color5');
document.getElementById('color6').value=getParameterByName('color6');
if (getParameterByName('color1').length<1){document.getElementById('color1').value="#000000";};var color1=document.getElementById('color1').value;
if (getParameterByName('color2').length<1){document.getElementById('color2').value="#4488f0";};var color2=document.getElementById('color2').value;
if (getParameterByName('color3').length<1){document.getElementById('color3').value="#44ff44";};var color3=document.getElementById('color3').value;
if (getParameterByName('color4').length<1){document.getElementById('color4').value="#F0F000";};var color4=document.getElementById('color4').value;
if (getParameterByName('color5').length<1){document.getElementById('color5').value="#f0a544";};var color5=document.getElementById('color5').value;
if (getParameterByName('color6').length<1){document.getElementById('color6').value="#ff4040";};var color6=document.getElementById('color6').value;
//here is where we read value for data input
document.getElementById('across').value=getParameterByName('across');
document.getElementById('repeat').value=getParameterByName('repeat');
if (document.getElementById('repeat').value==''){document.getElementById('repeat').value=1;}
if (document.getElementById('across').value==''){document.getElementById('across').value=6;}
document.getElementById('range').value=getParameterByName('range');//we want number to stay after refresh

var  repeat= getParameterByName('repeat'); 
var range =document.getElementById('range');//we get the range for setting color map. it can be as high as 1024
var across=getParameterByName('across');//to know how wide table is to be with values
if (document.getElementById('across').value==''){across=6;}
if (document.getElementById('range').value==''){document.getElementById('range').value=64;}//we want number to stay after refresh
if (getParameterByName('range') <0 | getParameterByName('range') >1024){document.getElementById('range').value=64;}
var range =document.getElementById('range');//we get the range for setting color map. it can be as high as 1024
document.getElementById('startsamplingat').value=getParameterByName('startsamplingat');//we want number to stay after refresh
if (document.getElementById('startsamplingat').value==''){document.getElementById('startsamplingat').value=25;}//we give default value
if (getParameterByName('startsamplingat')>200){document.getElementById('startsamplingat').value=200;}
var startsamplingat=getParameterByName('startsamplingat');
//we get old color table values to compare color data
var dataOldColor= new Array(1024);//we get old color data of 256 words of color information
var numberinarray=0;//used for converting to colors
//for (n=0;n<oldColorRaw.length;n++){//we look at all of left table and extra 565 convert to 24bit and put on screen
//if (oldColorRaw.substring(i)="x"){}

//ctx2.font="20px Georgia";
//ctx2.fillText("[signtime="+signtime+"]",0,210);

//}

// Create gradient
var grd = ctx.createLinearGradient(0,0,1324,0);
//we show gradience of 6 colors 1/6=
grd.addColorStop(0,color1);//0.1666
grd.addColorStop(0.1666*1,color2);
grd.addColorStop(0.1666*2,color3);
grd.addColorStop(0.1666*3,color4);
grd.addColorStop(0.1666*4,color5);
grd.addColorStop(0.1666*5,color6);
// Fill with gradient


ctx.fillStyle = grd;
ctx.fillRect(1,10,1450,80);
ctx.beginPath();
ctx.font="20px Georgia";
ctx.fillStyle = '#000000';
ctx.fillText("[generated color to sample]",800,50);
ctx.fillStyle = grd;
//data=0;
var imgData = ctx.getImageData(0, 0, 1024, 210);
 //var imgData=ctx.getImageData(1, 1, 1024, 100).data  //'rgb(0,'+Math.floor(i)+','+Math.floor(i)+')';
 var red,green,blue;
var temp=0;

//color table to make color change less and interpolation more meaningful
range=getParameterByName('range');//we convert to make sure it is numeric
document.getElementById('colorSets2').innerHTML="{";//start for data .toString(16) makes data hex
for (  i=0;i<range;i++){
  for (  j=0;j<1024/range;j++){
  
 //if (temp>Math.round1024/ range){temp=0;}
  ctx.beginPath();

var imgData = ctx.getImageData(i*(1024/range)+j+Math.floor(startsamplingat), 10,2, 2);
 
if (j==0){

red = imgData.data[0];
green = imgData.data[1];
blue = imgData.data[2];
}
ctx.moveTo(i*(1024/range)+j, 200);
ctx.lineTo(i*(1024/range)+j, 280);

ctx.strokeStyle ='rgb('+Math.floor(red&248)+','+Math.floor(green&252)+','+Math.floor(blue&248)+')';
//ctx.strokeStyle ='rgb(0,0,255)';

//'rgb('+Math.floor(red/16)+','+Math.floor(green/8)+','+Math.floor(blue/16)+') ';

//getPixelXY(temp,i,50)

ctx.stroke();
}//j
var temprepeat=repeat;//if we are repeating data we have this to do it
while (temprepeat>0){ temprepeat--;
//document.getElementById('colorSets2').innerHTML+='rgb('+Math.floor(red&248)+','+Math.floor(green&252)+','+Math.floor(blue&248)+')';
hexinfo=(Math.floor(red/8)*2048+Math.floor(green/4)*32+Math.floor(blue/8)).toString(16)+',';

while (hexinfo.length<5){hexinfo='0'+hexinfo;} //this adds leading zeros
document.getElementById('colorSets2').innerHTML+='0x'+hexinfo;
temp++;
}

if (temp>across){document.getElementById('colorSets2').innerHTML+= String.fromCharCode(13);temp=0;} //we ad a return to make things go to next line to be nice
}

//this is at end of loop, all values in table text area, now we need to clean up last comment and close loop 
var temptable=document.getElementById('colorSets2').innerHTML
document.getElementById('colorSets2').innerHTML=temptable.substring(0,temptable.length-1);//we remove last coma
document.getElementById('colorSets2').innerHTML+="};";//we want number to stay after refresh;//start for data .toString(16) makes data hex
//this part simulates actual chart data

for (  i=0;i<64;i++){
 for (j=0;j<16;j++){
  
 //if (temp>Math.round1024/ range){temp=0;}
  ctx.beginPath();

var imgData = ctx.getImageData(i*16+Math.floor(startsamplingat), 10,2, 2);
 

if (j==0){
red = imgData.data[0];
green = imgData.data[1];
blue = imgData.data[2];
}

ctx.moveTo(i*16+j, 100);
ctx.lineTo(i*16+j, 180);

 
ctx.strokeStyle ='rgb('+Math.floor(red&248)+','+Math.floor(green&252)+','+Math.floor(blue&248)+')';
//getPixelXY(temp,i,50)

ctx.stroke();
}
}
//copy();
ctx.beginPath();
ctx.font="20px Georgia";
ctx.fillStyle = '#000000';
ctx.fillText("[64 color detail ref.]",800,150);
ctx.fillText("<--[16 bit color, and info is in tables below]",1030,250);
ctx.fillText("          (these are output colors)",1030,270);
ctx.moveTo(startsamplingat, 0);
ctx.lineTo(startsamplingat, 100);
ctx.strokeStyle= '#000000';
ctx.stroke();

</script>

</body>
</html>

